// display_font.cpp
#include "display_font.h"

// 6x8 字体字模 (ASCII 32-126)
// 格式: 每字符6字节(6列x8行), 每字节表示一列的点阵数据(MSB在顶部)
// 取模方式: 阴码逐行式顺向(高位在前)[1](@ref)
const uint8_t font_6x8_data[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 空格 (32)
    0x20, 0x20, 0x20, 0x20, 0x00, 0x20, 0x00, 0x00, // ! (33)
    0x50, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, // " (34)
    0x50, 0xF8, 0x50, 0xF8, 0x50, 0x00, 0x00, 0x00, // # (35)
    0x20, 0x78, 0xA0, 0x70, 0x28, 0xF0, 0x00, 0x00, // $ (36)
    0xC0, 0xC8, 0x10, 0x20, 0x40, 0x98, 0x00, 0x00, // % (37)
    0x40, 0xA0, 0xA0, 0x40, 0xA8, 0x90, 0x00, 0x00, // & (38)
    0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, // ' (39)
    0x10, 0x20, 0x40, 0x40, 0x40, 0x20, 0x00, 0x00, // ( (40)
    0x40, 0x20, 0x10, 0x10, 0x10, 0x20, 0x00, 0x00, // ) (41)
    0x20, 0xA8, 0x70, 0xA8, 0x20, 0x00, 0x00, 0x00, // * (42)
    0x00, 0x20, 0x20, 0xF8, 0x20, 0x20, 0x00, 0x00, // + (43)
    0x00, 0x00, 0x00, 0x00, 0x20, 0x40, 0x00, 0x00, // , (44)
    0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, // - (45)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, // . (46)
    0x00, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, // / (47)
    0x70, 0x88, 0x98, 0xA8, 0xC8, 0x70, 0x00, 0x00, // 0 (48)
    0x20, 0x60, 0x20, 0x20, 0x20, 0x70, 0x00, 0x00, // 1 (49)
    0x70, 0x88, 0x08, 0x30, 0x40, 0xF8, 0x00, 0x00, // 2 (50)
    0x70, 0x88, 0x30, 0x08, 0x88, 0x70, 0x00, 0x00, // 3 (51)
    0x10, 0x30, 0x50, 0x90, 0xF8, 0x10, 0x00, 0x00, // 4 (52)
    0xF8, 0x80, 0xF0, 0x08, 0x88, 0x70, 0x00, 0x00, // 5 (53)
    0x30, 0x40, 0x80, 0xF0, 0x88, 0x70, 0x00, 0x00, // 6 (54)
    0xF8, 0x08, 0x10, 0x20, 0x40, 0x40, 0x00, 0x00, // 7 (55)
    0x70, 0x88, 0x70, 0x88, 0x88, 0x70, 0x00, 0x00, // 8 (56)
    0x70, 0x88, 0x88, 0x78, 0x08, 0x70, 0x00, 0x00, // 9 (57)
    0x00, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00, // : (58)
    0x00, 0x00, 0x20, 0x00, 0x20, 0x40, 0x00, 0x00, // ; (59)
    0x10, 0x20, 0x40, 0x40, 0x20, 0x10, 0x00, 0x00, // < (60)
    0x00, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x00, 0x00, // = (61)
    0x40, 0x20, 0x10, 0x10, 0x20, 0x40, 0x00, 0x00, // > (62)
    0x70, 0x88, 0x10, 0x20, 0x00, 0x20, 0x00, 0x00, // ? (63)
    0x70, 0x88, 0xB8, 0xB8, 0x80, 0x78, 0x00, 0x00, // @ (64)
    0x20, 0x50, 0x88, 0xF8, 0x88, 0x88, 0x00, 0x00, // A (65)
    0xF0, 0x88, 0xF0, 0x88, 0x88, 0xF0, 0x00, 0x00, // B (66)
    0x70, 0x88, 0x80, 0x80, 0x88, 0x70, 0x00, 0x00, // C (67)
    0xF0, 0x88, 0x88, 0x88, 0x88, 0xF0, 0x00, 0x00, // D (68)
    0xF8, 0x80, 0xF0, 0x80, 0x80, 0xF8, 0x00, 0x00, // E (69)
    0xF8, 0x80, 0xF0, 0x80, 0x80, 0x80, 0x00, 0x00, // F (70)
    0x70, 0x88, 0x80, 0x98, 0x88, 0x78, 0x00, 0x00, // G (71)
    0x88, 0x88, 0xF8, 0x88, 0x88, 0x88, 0x00, 0x00, // H (72)
    0x70, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00, 0x00, // I (73)
    0x38, 0x10, 0x10, 0x10, 0x90, 0x60, 0x00, 0x00, // J (74)
    0x88, 0x90, 0xA0, 0xE0, 0x90, 0x88, 0x00, 0x00, // K (75)
    0x80, 0x80, 0x80, 0x80, 0x80, 0xF8, 0x00, 0x00, // L (76)
    0x88, 0xD8, 0xA8, 0x88, 0x88, 0x88, 0x00, 0x00, // M (77)
    0x88, 0xC8, 0xA8, 0x98, 0x88, 0x88, 0x00, 0x00, // N (78)
    0x70, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, // O (79)
    0xF0, 0x88, 0x88, 0xF0, 0x80, 0x80, 0x00, 0x00, // P (80)
    0x70, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, // Q (81)
    0xF0, 0x88, 0x88, 0xF0, 0x90, 0x88, 0x00, 0x00, // R (82)
    0x78, 0x80, 0x70, 0x08, 0x08, 0xF0, 0x00, 0x00, // S (83)
    0xF8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, // T (84)
    0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, // U (85)
    0x88, 0x88, 0x88, 0x50, 0x50, 0x20, 0x00, 0x00, // V (86)
    0x88, 0x88, 0x88, 0xA8, 0xA8, 0x50, 0x00, 0x00, // W (87)
    0x88, 0x50, 0x20, 0x20, 0x50, 0x88, 0x00, 0x00, // X (88)
    0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x00, 0x00, // Y (89)
    0xF8, 0x08, 0x10, 0x20, 0x40, 0xF8, 0x00, 0x00, // Z (90)
    0x70, 0x40, 0x40, 0x40, 0x40, 0x70, 0x00, 0x00, // [ (91)
    0x80, 0x40, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00, // \ (92)
    0x70, 0x10, 0x10, 0x10, 0x10, 0x70, 0x00, 0x00, // ] (93)
    0x20, 0x50, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, // ^ (94)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, // _ (95)
    0x40, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ` (96)
    0x00, 0x00, 0x78, 0x88, 0x98, 0x68, 0x00, 0x00, // a (97)
    0x80, 0x80, 0xF0, 0x88, 0x88, 0xF0, 0x00, 0x00, // b (98)
    0x00, 0x00, 0x78, 0x80, 0x80, 0x78, 0x00, 0x00, // c (99)
    0x08, 0x08, 0x78, 0x88, 0x88, 0x78, 0x00, 0x00, // d (100)
    0x00, 0x00, 0x70, 0xB8, 0xC0, 0x78, 0x00, 0x00, // e (101)
    0x30, 0x48, 0x40, 0xE0, 0x40, 0x40, 0x00, 0x00, // f (102)
    0x00, 0x00, 0x78, 0x88, 0x88, 0x78, 0x00, 0x00, // g (103)
    0x80, 0x80, 0xF0, 0x88, 0x88, 0x88, 0x00, 0x00, // h (104)
    0x20, 0x00, 0x60, 0x20, 0x20, 0x70, 0x00, 0x00, // i (105)
    0x10, 0x00, 0x30, 0x10, 0x10, 0x10, 0x00, 0x00, // j (106)
    0x80, 0x80, 0x98, 0xE0, 0x90, 0x88, 0x00, 0x00, // k (107)
    0x60, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00, 0x00, // l (108)
    0x00, 0x00, 0xD0, 0xA8, 0xA8, 0xA8, 0x00, 0x00, // m (109)
    0x00, 0x00, 0xF0, 0x88, 0x88, 0x88, 0x00, 0x00, // n (110)
    0x00, 0x00, 0x70, 0x88, 0x88, 0x70, 0x00, 0x00, // o (111)
    0x00, 0x00, 0xF0, 0x88, 0x88, 0xF0, 0x00, 0x00, // p (112)
    0x00, 0x00, 0x78, 0x88, 0x88, 0x78, 0x00, 0x00, // q (113)
    0x00, 0x00, 0xB8, 0xC0, 0x80, 0x80, 0x00, 0x00, // r (114)
    0x00, 0x00, 0x78, 0xE0, 0x18, 0xF0, 0x00, 0x00, // s (115)
    0x40, 0x40, 0xE0, 0x40, 0x48, 0x30, 0x00, 0x00, // t (116)
    0x00, 0x00, 0x88, 0x88, 0x88, 0x78, 0x00, 0x00, // u (117)
    0x00, 0x00, 0x88, 0x88, 0x50, 0x20, 0x00, 0x00, // v (118)
    0x00, 0x00, 0x88, 0xA8, 0xA8, 0x50, 0x00, 0x00, // w (119)
    0x00, 0x00, 0x88, 0x50, 0x50, 0x88, 0x00, 0x00, // x (120)
    0x00, 0x00, 0x88, 0x88, 0x88, 0x78, 0x00, 0x00, // y (121)
    0x00, 0x00, 0xF8, 0x10, 0x20, 0xF8, 0x00, 0x00, // z (122)
    0x10, 0x20, 0x20, 0x40, 0x20, 0x20, 0x00, 0x00, // { (123)
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, // | (124)
    0x40, 0x20, 0x20, 0x10, 0x20, 0x20, 0x00, 0x00, // } (125)
    0x00, 0x00, 0x48, 0xA8, 0x90, 0x00, 0x00, 0x00, // ~ (126)
};

// 8x16 字体字模
// 8x16 ASCII字体字模 (字符范围 32-126)
// 格式: 每字符16字节(8像素宽 × 16像素高), 按ASCII顺序排列
const uint8_t font_8x16_data[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 空格 (32)
    0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, // ! (33)
    0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // " (34)
    0x00, 0x00, 0x6C, 0x6C, 0x6C, 0xFE, 0x6C, 0x6C, 0xFE, 0x6C, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00, // # (35)
    0x18, 0x18, 0x3E, 0x60, 0x60, 0x3C, 0x06, 0x06, 0x7C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, // $ (36)
    0x00, 0x00, 0x46, 0xA6, 0xAC, 0x4C, 0x18, 0x18, 0x32, 0x35, 0x65, 0x62, 0x00, 0x00, 0x00, 0x00, // % (37)
    0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x76, 0xDC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, // & (38)
    0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ' (39)
    0x00, 0x00, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, // ( (40)
    0x00, 0x00, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00, 0x0C, 0x0C, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, // ) (41)
    0x00, 0x00, 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // * (42)
    0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // + (43)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, // , (44)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // - (45)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, // . (46)
    0x00, 0x00, 0x02, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // / (47)
    0x00, 0x00, 0x7C, 0xC6, 0xCE, 0xDE, 0xD6, 0xD6, 0xE6, 0xE6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // 0 (48)
    0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x00, 0x00, 0x00, 0x00, // 1 (49)
    0x00, 0x00, 0x7C, 0xC6, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, // 2 (50)
    0x00, 0x00, 0x7C, 0xC6, 0x06, 0x06, 0x3C, 0x06, 0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // 3 (51)
    0x00, 0x00, 0x0C, 0x1C, 0x3C, 0x6C, 0xCC, 0xCC, 0xFE, 0x0C, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, // 4 (52)
    0x00, 0x00, 0xFE, 0xC0, 0xC0, 0xC0, 0xFC, 0x06, 0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // 5 (53)
    0x00, 0x00, 0x7C, 0xC6, 0xC0, 0xC0, 0xFC, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // 6 (54)
    0x00, 0x00, 0xFE, 0xC6, 0x06, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, // 7 (55)
    0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // 8 (56)
    0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // 9 (57)
    0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, // : (58)
    0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, // ; (59)
    0x00, 0x00, 0x00, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00, // < (60)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // = (61)
    0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, // > (62)
    0x00, 0x00, 0x7C, 0xC6, 0xC6, 0x0C, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, // ? (63)
    0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xDE, 0xDE, 0xDE, 0xDE, 0xC0, 0xC0, 0x7C, 0x00, 0x00, 0x00, 0x00, // @ (64)
    0x00, 0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, // A (65)
    0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x66, 0x66, 0x66, 0x66, 0xFC, 0x00, 0x00, 0x00, 0x00, // B (66)
    0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0x0C, 0xC0, 0xC2, 0x66, 0x3C, 0x00, 0x00, 0x00, 0x00, // C (67)
    0x00, 0x00, 0xF8, 0x6C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00, 0x00, 0x00, 0x00, // D (68)
    0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00, // E (69)
    0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00, // F (70)
    0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xCE, 0xC6, 0xC6, 0x66, 0x3A, 0x00, 0x00, 0x00, 0x00, // G (71)
    0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, // H (72)
    0x00, 0x00, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, // I (73)
    0x00, 0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0xCC, 0x78, 0x00, 0x00, 0x00, 0x00, // J (74)
    0x00, 0x00, 0xE6, 0x66, 0x66, 0x6C, 0x78, 0x78, 0x6C, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00, // K (75)
    0x00, 0x00, 0xF0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00, // L (76)
    0x00, 0x00, 0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, // M (77)
    0x00, 0x00, 0xC6, 0xE6, 0xF6, 0xFE, 0xDE, 0xCE, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, // N (78)
    0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // O (79)
    0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x66, 0x7C, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00, // P (80)
    0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xD6, 0x7C, 0x06, 0x00, 0x00, 0x00, // Q (81)
    0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00, // R (82)
    0x00, 0x00, 0x7C, 0xC6, 0xC6, 0x60, 0x38, 0x0C, 0x06, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // S (83)
    0x00, 0x00, 0x7E, 0x7E, 0x5A, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, // T (84)
    0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // U (85)
    0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, // V (86)
    0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xD6, 0xFE, 0xEE, 0xC6, 0x00, 0x00, 0x00, 0x00, // W (87)
    0x00, 0x00, 0xC6, 0xC6, 0x6C, 0x7C, 0x38, 0x38, 0x7C, 0x6C, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, // X (88)
    0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, // Y (89)
    0x00, 0x00, 0xFE, 0xC6, 0x86, 0x0C, 0x18, 0x30, 0x60, 0xC2, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, // Z (90)
    0x00, 0x00, 0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x00, 0x00, 0x00, 0x00, // [ (91)
    0x00, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // \ (92)
    0x00, 0x00, 0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C, 0x00, 0x00, 0x00, 0x00, // ] (93)
    0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ^ (94)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, // _ (95)
    0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ` (96)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, // a (97)
    0x00, 0x00, 0xE0, 0x60, 0x60, 0x78, 0x6C, 0x66, 0x66, 0x66, 0x66, 0x7C, 0x00, 0x00, 0x00, 0x00, // b (98)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC0, 0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // c (99)
    0x00, 0x00, 0x1C, 0x0C, 0x0C, 0x3C, 0x6C, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, // d (100)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xFE, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // e (101)
    0x00, 0x00, 0x1C, 0x36, 0x32, 0x30, 0x78, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00, 0x00, 0x00, 0x00, // f (102)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xCC, 0x78, 0x00, // g (103)
    0x00, 0x00, 0xE0, 0x60, 0x60, 0x6C, 0x76, 0x66, 0x66, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00, // h (104)
    0x00, 0x00, 0x18, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, // i (105)
    0x00, 0x00, 0x06, 0x06, 0x00, 0x0E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3C, 0x00, // j (106)
    0x00, 0x00, 0xE0, 0x60, 0x60, 0x66, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00, // k (107)
    0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, // l (108)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0xFE, 0xD6, 0xD6, 0xD6, 0xD6, 0xD6, 0x00, 0x00, 0x00, 0x00, // m (109)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, // n (110)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // o (111)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00, // p (112)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0x0C, 0x1E, 0x00, // q (113)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x76, 0x66, 0x60, 0x60, 0x60, 0xF0, 000, 0x00, 0x00, 0x00,  // r (114)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0x60, 0x38, 0x0C, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, // s (115)
    0x00, 0x00, 0x10, 0x30, 0x30, 0xFC, 0x30, 0x30, 0x30, 0x30, 0x36, 0x1C, 0x00, 0x00, 0x00, 0x00, // t (116)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, // u (117)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00, // v (118)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xD6, 0xD6, 0xFE, 0x6C, 0x00, 0x00, 0x00, 0x00, // w (119)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x6C, 0x38, 0x38, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00, // x (120)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x0C, 0xF8, 0x00, // y (121)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xCC, 0x18, 0x30, 0x60, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, // z (122)
    0x00, 0x00, 0x0E, 0x18, 0x18, 0x18, 0x70, 0x18, 0x18, 0x18, 0x18, 0x0E, 0x00, 0x00, 0x00, 0x00, // { (123)
    0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, // | (124)
    0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0E, 0x18, 0x18, 0x18, 0x18, 0x70, 0x00, 0x00, 0x00, 0x00, // } (125)
    0x00, 0x00, 0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ~ (126)
};

// 12x24 字体字模
const uint8_t font_12x24_data[] = {
    // 每个字符36字节数据(12x24/8 * 24=36)
    // 空格 (ASCII 32)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    // 更多字符...
};

// 字体定义
static const font_t font_6x8 = {
    .width = 6,
    .height = 8,
    .bytes_per_char = 8, // 6x8/8 * 8 = 6字节
    .data = font_6x8_data};

static const font_t font_8x16 = {
    .width = 8,
    .height = 16,
    .bytes_per_char = 16, // 8x16/8 * 16 = 16字节
    .data = font_8x16_data};

static const font_t font_12x24 = {
    .width = 12,
    .height = 24,
    .bytes_per_char = 36, // 12x24/8 * 24 = 36字节
    .data = font_12x24_data};

// 获取指定字体
const font_t *get_font(font_size_t size)
{
    switch (size)
    {
    case FONT_SIZE_6x8:
        return &font_6x8;
    case FONT_SIZE_8x16:
        return &font_8x16;
    case FONT_SIZE_12x24:
        return &font_12x24;
    default:
        return &font_6x8;
    }
}